Static VS Instance :

>> Static Methods :
In Java, it is possible to create a method inside a class that can be used by itself, without reference to an instance/object of the class.
This type of method is known as the static method. To create such a method, we’ve to precede its declaration with the keyword static.
They can only access other static methods and variables. They cannot access instance methods or variables.They cannot refer to ‘this’ or ‘super’ in any way.

For example main() is a static method and it is called by the JVM when it starts an application.

>> Instance Methods :
Instance methods belong to an instance of a class (i.e class objects).
To use an instance method we require an object of the class. Instance methods can access instance methods and  variables
as well as static methods and static variables directly.

-------------------------------

>> Static Variables :
1. Declared by using the keyword 'static'
2. Every instance of a class shares the same static variable which means if changes are made to that
variable, all other instances will see the effect of that change. (V.V Imp)
3. [From google] A static member is a member of a class that isn't associated with an instance of a class.
Instead, the member belongs to the class itself. As a result, you can access the static member without first
creating a class instance. The value of a static field is the same across all instances of the class.

>> Instance Variables :
1. They don't use any keyword.
2. They are also know as 'fields' or 'member variables'.
3. Instance variables belong to an instance of a class.
4. Every instance has it's own copy of an instance variable.
5. Every instance can have a different value (state).
